{"version":3,"file":"static/js/129.17d27b75.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/Contact/Contact.module.css?41f4","components/ContactList/Contact/Contact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["\nexport const selectContactsState = store => store.phonebook.contacts;\n\nexport const selectContactsAll = store => store.phonebook.contacts.items;\n\nexport const selectFilter = store => store.phonebook.filter;\n\nexport const selectContactsFiltered = store => {\n    const contacts = selectContactsAll(store);\n    const filter = selectFilter(store);\n    const normolizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normolizedFilter)\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"ContactListItem\":\"Contact_ContactListItem__LbJXZ\"};","import css from './Contact.module.css'\nimport PropTypes from 'prop-types';\n\nexport function Contact({ name, number, onDeleteContact }) {\n    return (\n        <li className={css.ContactListItem}>\n            <p>{name}: </p>\n            <p>{number}</p>\n            <button \n                type='button'\n                onClick={onDeleteContact}\n            >Delete</button>\n        </li>\n    );\n}\n\nContact.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactListBlock\":\"ContactList_contactListBlock__wl5Ij\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContactsFiltered } from 'redux/contacts/selectors';\nimport { Contact } from \"./Contact/Contact\";\nimport css from './ContactList.module.css'\n\nexport function ContactList() {\n    const contacts = useSelector(selectContactsFiltered);\n    const dispatch = useDispatch();\n\n    return contacts.length > 0 ? (\n        <div className={css.contactListBlock}>\n            <ul>\n                {contacts.map(({ id, name, number }) => (\n                    <Contact\n                        key={id}\n                        name={name}\n                        number={number}\n                        onDeleteContact={() => dispatch(deleteContact(id))}\n                    /> \n                ))}\n            </ul>\n        </div>\n    ) : (<p>contact list is empty</p>);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"сontactForm\":\"ContactForm_сontactForm__ujZb7\"};","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport toast from 'react-hot-toast';\nimport { addContact } from \"redux/contacts/operations\";\nimport { selectContactsAll } from \"redux/contacts/selectors\";\nimport css from './ContactForm.module.css'\n\nexport function ContactForm() {\n    const [name, setName] = useState('');//'Name Names'\n    const [number, setNumber] = useState('');//'123-456-789'\n    const contacts = useSelector(selectContactsAll);\n    const dispatch = useDispatch();\n  \n    const checkContact = (name) => {\n        const normolizedName = name.toLowerCase();\n\n        return contacts.some(contact =>\n            contact.name.toLowerCase().includes(normolizedName)\n        );\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (checkContact(name)) {\n            toast.error(`${name} is already in contacts.`);\n            //window.alert(`${name} is already in contacts.`);\n            return;\n        }\n        \n        dispatch(addContact({ name, number }));\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    }\n        \n    const handleInputChangeName = event => {\n        setName(event.currentTarget.value);\n    }\n\n    const handleInputChangeNumber = event => {\n        setNumber(event.currentTarget.value);\n    }\n\n    return (\n        <form className={css.сontactForm} onSubmit={handleSubmit}>\n            <label>\n                Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    onChange={handleInputChangeName}\n                />\n            </label>\n            <label>\n                Phone number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={number}\n                    onChange={handleInputChangeNumber}\n                />\n            </label>\n            <button type='submit'>Add contact</button>\n        </form>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterBlock\":\"Filter_filterBlock__whgWd\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/slice';\nimport { selectContactsAll, selectFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css'\n\nexport function Filter() {\n    const contacts = useSelector(selectContactsAll);\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const changeFilter = event => {\n        dispatch(setFilter(event.currentTarget.value));\n    };\n\n    return contacts.length > 0 &&  (\n        <div className={css.filterBlock}>\n            <p>Find contacts by name</p>\n            <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={filter}\n                onChange={changeFilter}\n            />\n        </div>\n    )\n};\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectContactsState } from \"redux/contacts/selectors\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const { isLoading, error } = useSelector(selectContactsState);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <div>\n            <title>Contacts</title>\n            <h1>Phonebook</h1>\n            <ContactForm />\n\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n\n            {isLoading && <p>Loading contacts...</p>}\n            {error && <p>{error}</p>}\n        </div>\n    )\n}"],"names":["selectContactsState","store","phonebook","contacts","selectContactsAll","items","selectFilter","filter","selectContactsFiltered","normolizedFilter","toLowerCase","contact","name","includes","Contact","number","onDeleteContact","className","css","type","onClick","ContactList","useSelector","dispatch","useDispatch","length","map","id","deleteContact","ContactForm","useState","setName","setNumber","reset","onSubmit","event","preventDefault","normolizedName","some","checkContact","toast","addContact","pattern","title","required","value","onChange","currentTarget","Filter","setFilter","Contacts","isLoading","error","useEffect","fetchContacts"],"sourceRoot":""}